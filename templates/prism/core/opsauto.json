{
  "Parameters": {

    "VpcId": {
      "Type": "String",
      "Description": "VPC id."
    },

    "AmiId": {
      "Type": "String",
      "Description": "KeyName."
    },

    "NotificationTopicId": {
      "Type": "String",
      "Description": "NotificationTopicId."
    },

    "DNSName": {
      "Type": "String",
      "Description": "DNS Name."
    },

    "DNSServer": {
      "Type": "String",
      "Description": "DNS Server."
    },

    "InstanceType": {
      "Type": "String",
      "Description": "Type of instance."
    },

    "SubnetId": {
      "Type": "String",
      "Description": "Type of instance."
    },

    "SubnetCidr": {
      "Type": "String",
      "Description": "Type of instance."
    },

    "Min": { "Type": "String", "Description": "Min number of instances." },
    "Max": { "Type": "String", "Description": "Min number of instances." },
    "DesiredCapacity": { "Type": "String", "Description": "Min number of instances." },

    "KeyName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "StackName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "DomainName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "DeploymentName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "HTTPProxyUrl": {
      "Type": "String",
      "Description": "Build package URL."
    },

    "AvailabilityZone": {
      "Type": "String",
      "Description": "AvailabilityZone."
    }

  },

  "Resources": {

    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VpcId" },
        "GroupDescription": "Enables ports for the LogStash services",
        "SecurityGroupIngress": [ 
          { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "0.0.0.0/0" },
          { "IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "CidrIp": "10.0.0.0/7" },
          { "IpProtocol": "tcp", "FromPort": "27017", "ToPort": "27017", "CidrIp": "10.0.0.0/16" }
        ],
        "SecurityGroupEgress": [ ]
      }
    },

    "OpsAuto": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "Comment1": "Configure and deploy the prism nodes for a master cluster",
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/etc/chef/dna.json": {
                "mode": "000644",
                "owner": "root",
                "group": "root",
                "content": { "Fn::Join": [ "", [
                  "{\"run_list\": [ \"role[opsauto-server]\" ], \"ec2\": { \"region\": \"", { "Ref": "AWS::Region" } ,"\"}}"
                ]]}
              },
              "/etc/chef/validation.pem": {
                "mode": "000644",
                "owner": "root",
                "group": "root",
                "content": { "Fn::Join": [ "", [
                  "-----BEGIN RSA PRIVATE KEY-----",
                  "MIIEpQIBAAKCAQEA3yN3ASojVmj2XKmjUMdJ7V99jFdTq9hXzjIxpI6EIGgaxZ8H",
                  "xDq4bGg2DEOwCFKiV1ZsfVPnydKSwfHJZqpYMkgVojM1oQAlSlIxGqPypOq/khCS",
                  "755EjU6UHQiOUoVptcdo8AGBwwL5RDQ5thKdZWDNAnJy/rmfBOSxjU4NdSd+gMGD",
                  "7GgjvU+OlcXftzs/gvmujfxW2wxbZ8gkSbPeDjwzCh8/8VXs+5ZBY9TuP+dbmQkD",
                  "Sx2yHNFiH/s6OVNfxCtSsh2EuHYTEmEpzg0hKLZr5cVLI3aNWbq80RAklYexBdBe",
                  "o6I9ZHGqMAE0wZuwBVoBNK3mqFEUPQlx3Lp8MwIDAQABAoIBACEZCJjioDU8AncC",
                  "LphXxy5vgJbliSKvR27tYRGwlgacioQPr746m4pw9rtg+uZxI2VjC1qXrITyOBSO",
                  "gbo5wDVNHfBeOjE0bVOV13TFJsOxklLfJHxodHClXDDmSP4SjfiJqJYZEx9S/JhS",
                  "StEn97LG5gHb6hTAgcbfCTsVfceHmkMklK8zWalZnCb51h8Ve6Oujt0qJoQc6wVV",
                  "PIuCJ91h03tjuMjE+nHP9qvYPK48US1svCwpjjh6wNKZM+RlORW+au3P7p3UqKot",
                  "446qUM+RsL6J/FevlYqy9VmLDSdxemYx8jqWDZHHB5QooNNnA/3T6f6ZWYObwhm4",
                  "FdyWl0kCgYEA8O8Z7TV5yH7z8kNTHzVyxnAi9aJB+u9VWaNVoG8dDG2dHH/m6mP9",
                  "ntgHCJPJq2PfQJoXCFq8fDevvPr8ebEXmCqEwmV+BWcZ20mawC6m26iAmOSf1gFe",
                  "KcGftn9vsC/DimMwUrW/8roMM+tVewwiQfSIhq2kLTsjhl2stjQceh0CgYEA7Rd9",
                  "7oU1zmMPs2A4u+aGHd8+agd8Ab5hoEu/mZzyiG3UciBgGFZWgkLIHlnvYptTx9Zr",
                  "GrONu4Q/Ic3M1bdDqt6v5RCVX5318nL8/C/til6D0cl7Vpfx9e3JH1LanBjnoMIP",
                  "TLmaIWCQdQ1IjJi/T90m6cc7puoM0+kMbFIYfo8CgYEAs0V1ySbNIv4zjcPCiao/",
                  "aJ/vo03EQm7q1vPNtr52otS83oPc0fLst9COCzfMCxcY+vysvq6lKNhWjwtB6Vp3",
                  "7+VTO0JBbsu0VZKC7xTHWxIZ/am/tID4C6HisOxJspMXsFT1k9Vgqb79bXRh+lig",
                  "9Op625tAWddzK3twE3La7ZECgYEAvBYx4kItYFC4CO5hs7b6WMJcylKrrtpwqnDN",
                  "TDj1MwQmUG+crFH6CRafmWxxe0GMInHYv/MHkmYki1WvlS/w76H/2nHgfl1a2v8b",
                  "8Zi4ElhOrOPxA85Atn/wWPgq00DyqFarOovXWXk4wJNMJbWbt+jS0Q0sJotwp8Av",
                  "CdPK+MMCgYEAsVeXcUIb9RLS6ra4506n3455CuZgrZ4FzbhWy4E6L0U1DUZeoB7H",
                  "+FdOaVudrCSgdDKmsogbxJXIhBG8amthGk7qGGRxrXHB2K4izaQLoHTprIdaGAJ1",
                  "v5bw9cybt4LSsxgczYgPbJYVKGbN8HVEpD7UMRcfGqXml3HyPrmy8Kk=",
                  "-----END RSA PRIVATE KEY-----"
                ]]}
              }

            }
          }
        }
      },
      "Properties": {
        "Tags": [{ "Key": "DeploymentName", "Value": { "Ref": "DeploymentName" }}],
        "ImageId": { "Ref": "AmiId" },
        "KeyName": { "Ref": "KeyName" },
        "SubnetId": { "Ref": "SubnetId" },
        "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
          "#!/bin/bash -v\n",
          "echo 'nameserver ",{"Ref": "DNSServer"},"' > /etc/resolv.conf\n",
          "mkdir -p /var/log/chef\n",
          "echo \"proxy=",{ "Ref": "HTTPProxyUrl" },"\" >> /etc/yum.conf\n",
          "yum update -y aws-cfn-bootstrap\n",
          "/opt/aws/bin/cfn-init --https-proxy ", { "Ref": "HTTPProxyUrl" },
            " --stack ", { "Ref" : "AWS::StackId" }, " --resource OpsAuto --region ", { "Ref" : "AWS::Region" }, "\n",
          "hostname ",{ "Fn::Join": [ "", [
            "opsauto.",
            { "Ref": "DeploymentName" }, ".",
            { "Ref": "AWS::Region" }, ".int.",
            { "Ref": "DomainName" }
          ]] }, "\n",
          "chef-server-ctl reconfigure\n"
        ]]}},
        "InstanceType": { "Ref": "InstanceType" },
        "AvailabilityZone": { "Ref": "AvailabilityZone" },
        "SecurityGroupIds": [{ "Ref": "InstanceSecurityGroup" }]
      }
    },

    "OpsAutoServerIP": {
      "Type": "AWS::EC2::EIP",
      "Properties": {
        "Domain": "vpc",
        "InstanceId": { "Ref": "OpsAuto" }
      }
    },

    "OpsAutoInstanceInternalDNS": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "TTL": "60",
        "Type": "A",
        "Comment": "External DNS pointer",
        "Name": { "Fn::Join": [ "", [
          "opsauto.",
          { "Ref": "StackName" }, ".",
          { "Ref": "AWS::Region" }, ".",
          { "Ref": "DomainName" }, "."
        ]]},
        "HostedZoneName": { "Fn::Join": [ "", [{ "Ref": "DomainName" }, "." ]]},
        "ResourceRecords": [{ "Ref": "OpsAutoServerIP" }]
      }
    },

    "OpsAutoInstanceInternalDNS": {
      "Type": "AWS::Route53::RecordSet",
      "Properties": {
        "TTL": "60",
        "Type": "A",
        "Comment": "Internal DNS pointer",
        "Name": { "Fn::Join": [ "", [
          "opsauto.",
          { "Ref": "StackName" }, ".",
          { "Ref": "AWS::Region" }, ".int.",
          { "Ref": "DomainName" }, "."
        ]]},
        "HostedZoneName": { "Fn::Join": [ "", [{ "Ref": "DomainName" }, "." ]]},
        "ResourceRecords": [{ "Fn::GetAtt": [ "OpsAuto", "PrivateIp" ]}]
      }
    }

  },

  "Outputs": {
  }

}
