{
  "Parameters": {

    "VpcId": {
      "Type": "String",
      "Description": "VPC id."
    },

    "AmiId": {
      "Type": "String",
      "Description": "KeyName."
    },

    "DNSName": {
      "Type": "String",
      "Description": "DNS Name."
    },

    "DNSServer": {
      "Type": "String",
      "Description": "DNS Server."
    },

    "InstanceType": {
      "Type": "String",
      "Description": "Type of instance."
    },

    "SubnetId": {
      "Type": "String",
      "Description": "Type of instance."
    },

    "SubnetCidr": {
      "Type": "String",
      "Description": "Type of instance."
    },

    "Min": { "Type": "String", "Description": "Min number of instances." },
    "Max": { "Type": "String", "Description": "Min number of instances." },
    "DesiredCapacity": { "Type": "String", "Description": "Min number of instances." },

    "KeyName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "StackName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "DomainName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "DeploymentName": {
      "Type": "String",
      "Description": "KeyName."
    },

    "HTTPProxyUrl": {
      "Type": "String",
      "Description": "Build package URL."
    },

    "AvailabilityZone": {
      "Type": "String",
      "Description": "AvailabilityZone."
    }

  },

  "Resources": {

    "InstanceSecurityGroup": {
      "Type": "AWS::EC2::SecurityGroup",
      "Properties": {
        "VpcId": { "Ref": "VpcId" },
        "GroupDescription": "Enables ports for the LogStash services",
        "SecurityGroupIngress": [ 
          { "IpProtocol": "tcp", "FromPort": "22", "ToPort": "22", "CidrIp": "10.0.0.0/7" },
          { "IpProtocol": "tcp", "FromPort": "9000", "ToPort": "9000", "CidrIp": "10.0.0.0/7" },
          { "IpProtocol": "tcp", "FromPort": "27017", "ToPort": "27017", "CidrIp": "10.0.0.0/16" }
        ],
        "SecurityGroupEgress": [ ]
      }
    },

    "OpsAuto": {
      "Type": "AWS::EC2::Instance",
      "Metadata": {
        "Comment1": "Configure and deploy the prism nodes for a master cluster",
        "AWS::CloudFormation::Init": {
          "config": {
            "files": {
              "/etc/chef/dna.json": {
                "mode": "000644",
                "owner": "root",
                "group": "root",
                "content": { "Fn::Join": [ "", [
                  "{\"run_list\": [ \"role[opsauto-server]\" ], \"ec2\": { \"region\": \"", { "Ref": "AWS::Region" } ,"\"}}"
                ]]}
              }
            }
          }
        }
      },
      "Properties": {
        "Tags": [{ "Key": "DeploymentName", "Value": { "Ref": "DeploymentName" }}],
        "ImageId": { "Ref": "AmiId" },
        "KeyName": { "Ref": "KeyName" },
        "SubnetId": { "Ref": "SubnetId" },
        "UserData": { "Fn::Base64": { "Fn::Join": [ "", [
          "#!/bin/bash -v\n",
          "echo 'nameserver ",{"Ref": "DNSServer"},"' > /etc/resolv.conf\n",
          "mkdir -p /var/log/chef\n",
          "echo \"proxy=",{ "Ref": "HTTPProxyUrl" },"\" >> /etc/yum.conf\n",
          "yum update -y aws-cfn-bootstrap\n",

          "/opt/aws/bin/cfn-init --https-proxy ", { "Ref": "HTTPProxyUrl" },
            " --stack ", { "Ref" : "AWS::StackId" }, " --resource OpsAuto --region ", { "Ref" : "AWS::Region" }, "\n",

          "hostname ",{ "Fn::Join": [ "", [
            "`curl http://169.254.169.254/1.0/meta-data/instance-id`.",
            { "Ref": "DeploymentName" }, ".",
            { "Ref": "AWS::Region" }, ".int.",
            { "Ref": "DomainName" }
          ]] }, "\n"
        ]]}},
        "InstanceType": { "Ref": "InstanceType" },
        "AvailabilityZone": { "Ref": "AvailabilityZone" },
        "SecurityGroupIds": [{ "Ref": "InstanceSecurityGroup" }]
      }
    }
  },

  "Outputs": {
  }

}
